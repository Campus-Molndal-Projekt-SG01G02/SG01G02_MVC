@model SG01G02_MVC.Web.Models.ProductViewModel
@inject SG01G02_MVC.Application.Interfaces.IBlobStorageService BlobStorageService
@{
    ViewData["Title"] = "Delete Product";
}
<div class="container mt-4">
    <h2>@ViewData["Title"]</h2>
    <div class="alert alert-danger">
        <strong>Are you sure you want to delete this product?</strong>
    </div>

    @if (Model.HasImage)
    {
        <div class="mb-3">
            <strong>Product Image:</strong>
            <div class="mt-2">
                @if (!string.IsNullOrEmpty(Model.ImageName))
                {
                    <img src="@BlobStorageService.GetBlobUrl(Model.ImageName)" class="img-thumbnail" style="max-height: 200px;" alt="@Model.Name" />
                }
                else if (!string.IsNullOrEmpty(Model.ImageUrl))
                {
                    <img src="@Model.ImageUrl" class="img-thumbnail" style="max-height: 200px;" alt="@Model.Name" />
                }
            </div>
        </div>
    }

    <dl class="row">
        <dt class="col-sm-2">Name</dt>
        <dd class="col-sm-10">@Model.Name</dd>
        <dt class="col-sm-2">Description</dt>
        <dd class="col-sm-10">@Model.Description</dd>
        <dt class="col-sm-2">Price</dt>
        <dd class="col-sm-10">@(Model.Price.HasValue ? Model.Price.Value.ToString("C") : "N/A")</dd>
        <dt class="col-sm-2">Stock</dt>
        <dd class="col-sm-10">@Model.StockQuantity</dd>
    </dl>
    <form asp-action="Delete" method="post">
        <input type="hidden" asp-for="Id" />
        <button type="submit" class="btn btn-danger">Delete</button>
        <a asp-action="Index" class="btn btn-secondary ms-2">Cancel</a>
    </form>
</div>