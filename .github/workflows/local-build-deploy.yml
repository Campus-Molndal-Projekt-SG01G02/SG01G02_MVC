# Local testing: act -W .github/workflows/local-build-deploy.yml --secret-file .secrets

name: Local Build and Deploy

on:
  workflow_dispatch:

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      # Debugsteg för att se exakt vad som finns tillgängligt
      - name: Debug Variables
        run: |
          echo "SECRET_DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}"
          echo "ENV_DOCKERHUB_USERNAME: $DOCKERHUB_USERNAME"
          echo "All environment variables:"
          env
          echo "All secrets keys:"
          echo "${{ toJson(secrets) }}"

      # Sätt miljövariabler direkt från .secrets-filen när man kör lokalt
      - name: Set environment variables from secrets
        run: |
          echo "DOCKERHUB_USERNAME=${{ secrets.DOCKERHUB_USERNAME }}" >> $GITHUB_ENV
          echo "DOCKERHUB_TOKEN=${{ secrets.DOCKERHUB_TOKEN }}" >> $GITHUB_ENV
          echo "WATCHTOWER_TOKEN=${{ secrets.WATCHTOWER_TOKEN || 'default-token' }}" >> $GITHUB_ENV
          echo "WATCHTOWER_ENDPOINT=${{ secrets.WATCHTOWER_ENDPOINT || 'http://40.127.138.80:8080' }}" >> $GITHUB_ENV

          # Visa vad som sätts
          echo "Setting DOCKERHUB_USERNAME to: ${{ secrets.DOCKERHUB_USERNAME }}"

      # Verifiera variabler
      - name: Verify secrets are set
        run: |

          echo "Current DOCKERHUB_USERNAME: $DOCKERHUB_USERNAME"

          # if [ -z "$DOCKERHUB_USERNAME" ]; then
          #   echo "Error: DOCKERHUB_USERNAME is not set"
          #   exit 1
          # fi

          if [ -z "$DOCKERHUB_USERNAME" ]; then
            echo "DOCKERHUB_USERNAME is not set in environment"

            # Försök sätta direkt från ursprunglig secret
            if [ -n "${{ secrets.DOCKERHUB_USERNAME }}" ]; then
              echo "Setting from secret directly"
              DOCKERHUB_USERNAME="${{ secrets.DOCKERHUB_USERNAME }}"
            else
              echo "Setting fallback value"
              DOCKERHUB_USERNAME="mymh"
            fi

            echo "Now DOCKERHUB_USERNAME: $DOCKERHUB_USERNAME"
          fi

          if [ -z "$DOCKERHUB_TOKEN" ]; then
            echo "Error: DOCKERHUB_TOKEN is not set"
            exit 1
          fi

          if [ -z "$WATCHTOWER_TOKEN" ]; then
            echo "Error: WATCHTOWER_TOKEN is not set"
            exit 1
          fi

          if [ -z "$WATCHTOWER_ENDPOINT" ]; then
            echo "Error: WATCHTOWER_ENDPOINT is not set"
            exit 1
          fi

          # Maskera hemligheterna i loggen men visa att de existerar
          echo "✅ DOCKERHUB_USERNAME exists"
          echo "✅ DOCKERHUB_TOKEN exists"
          echo "✅ WATCHTOWER_TOKEN exists"
          echo "✅ WATCHTOWER_ENDPOINT: $WATCHTOWER_ENDPOINT"

          echo "All required secrets are set correctly!"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ env.DOCKERHUB_TOKEN }}

      - name: Build Docker image (without push for local testing)
        uses: docker/build-push-action@v4
        with:
          context: .
          push: false
          load: true
          tags: mymh/sg01g02mvc:latest

      # Simulera en notifiering till Watchtower (utan att faktiskt skicka)
      - name: Mock Watchtower notification
        run: |
          echo "Would notify Watchtower at $WATCHTOWER_ENDPOINT with token $WATCHTOWER_TOKEN"
          echo "Actual curl command would be:"
          echo "curl -H \"Authorization: Bearer [REDACTED]\" $WATCHTOWER_ENDPOINT/v1/update"