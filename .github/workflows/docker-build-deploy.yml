name: Build and Deploy

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      # Logga in på Azure med service principal
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      # Hämta hemligheter från Key Vault
      - name: Get secrets from Key Vault
        id: getSecrets
        run: |
          VAULT_NAME="sg01g02kv606my1"

          # Verifiera att anslutningen till Key Vault fungerar
          echo "Checking Key Vault access..."
          az keyvault list --query "[?name=='$VAULT_NAME'].name" -o tsv

          # Kontrollera om hemligheterna finns
          echo "Checking if secrets exist..."
          az keyvault secret list --vault-name "$VAULT_NAME" --query "[].name" -o tsv

          # Hämta hemligheterna med utökad felhantering
          echo "Fetching dockerhub-username..."
          DOCKERHUB_USERNAME=$(az keyvault secret show --name 'dockerhub-username' --vault-name "$VAULT_NAME" --query 'value' -o tsv)
          if [ -z "$DOCKERHUB_USERNAME" ]; then
            echo "Failed to retrieve dockerhub-username"
          else
            echo "dockerhub-username retrieved successfully"
          fi
          echo "DOCKERHUB_USERNAME=$DOCKERHUB_USERNAME" >> $GITHUB_ENV

          echo "Fetching dockerhub-token..."
          DOCKERHUB_TOKEN=$(az keyvault secret show --name 'dockerhub-token' --vault-name "$VAULT_NAME" --query 'value' -o tsv)
          if [ -z "$DOCKERHUB_TOKEN" ]; then
            echo "Failed to retrieve dockerhub-token"
          else
            echo "dockerhub-token retrieved successfully"
          fi
          echo "DOCKERHUB_TOKEN=$DOCKERHUB_TOKEN" >> $GITHUB_ENV

          echo "Fetching watchtower-token..."
          WATCHTOWER_TOKEN=$(az keyvault secret show --name 'watchtower-token' --vault-name "$VAULT_NAME" --query 'value' -o tsv)
          if [ -z "$WATCHTOWER_TOKEN" ]; then
            echo "Failed to retrieve watchtower-token"
          else
            echo "watchtower-token retrieved successfully"
          fi
          echo "WATCHTOWER_TOKEN=$WATCHTOWER_TOKEN" >> $GITHUB_ENV

          echo "Fetching reverse-proxy-ip..."
          REVERSE_PROXY_IP=$(az keyvault secret show --name 'reverse-proxy-ip' --vault-name "$VAULT_NAME" --query 'value' -o tsv)
          if [ -z "$REVERSE_PROXY_IP" ]; then
            echo "Failed to retrieve reverse-proxy-ip"
          else
            echo "reverse-proxy-ip retrieved successfully"
          fi
          echo "WATCHTOWER_ENDPOINT=http://$REVERSE_PROXY_IP:8080" >> $GITHUB_ENV

      # Gör ett test här som kollar att hemligheterna är hämtade
      - name: Verify secrets were retrieved
        run: |
          if [ -z "$DOCKERHUB_USERNAME" ]; then
            echo "Error: DOCKERHUB_USERNAME is not set"
            exit 1
          fi

          if [ -z "$DOCKERHUB_TOKEN" ]; then
            echo "Error: DOCKERHUB_TOKEN is not set"
            exit 1
          fi

          if [ -z "$WATCHTOWER_TOKEN" ]; then
            echo "Error: WATCHTOWER_TOKEN is not set"
            exit 1
          fi

          if [ -z "$WATCHTOWER_ENDPOINT" ]; then
            echo "Error: WATCHTOWER_ENDPOINT is not set"
            exit 1
          fi

          # Maskera hemligheterna i loggen men visa att de existerar
          echo "DOCKERHUB_USERNAME exists"
          echo "DOCKERHUB_TOKEN exists"
          echo "WATCHTOWER_TOKEN exists"
          echo "WATCHTOWER_ENDPOINT: $WATCHTOWER_ENDPOINT"

          echo "All required secrets were successfully retrieved from Key Vault!"

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ env.DOCKERHUB_USERNAME }}
          password: ${{ env.DOCKERHUB_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: mymh/sg01g02mvc:latest

      - name: Notify Watchtower
        run: |
          curl -H "Authorization: Bearer ${{ env.WATCHTOWER_TOKEN }}" ${{ env.WATCHTOWER_ENDPOINT }}/v1/update